# ===================================================
# mounts
# ===================================================
mount=torizon-build-dir:
  bind: build/torizon
  path: /workdir

mount=torizon-install-dir:
  bind: install/torizon
  path: /install

mount=torizon-manifest-version:
  bind: gen/torizon-manifest-version
  path: /gen

# ===================================================
# images
# ===================================================
image=image-torizon-builder:
  image: ci4rail/torizon-builder
  context: torizon-builder/docker
  tags: ["{env.GitVersion_BranchVersion}"]
  args:
    TORIZON_BUILDER_VERSION: "{env.GitVersion_BranchVersion}"
  annotations:
    description: "build image-torizon-builder"

# ===================================================
# jobs
# ===================================================
# Preparation steps for build
job=prepare-sync-repos:
  use: image-torizon-builder
  command: bash -c "/usr/local/bin/prepare.sh && cd /workdir/ && if [ ! -d /workdir/repo-manifest ]; then git clone -b ${BRANCH} ${MANIFEST_REPO} repo-manifest; fi"
  mounts:
    - torizon-build-dir
  working-dir: /workdir
  env:
    - USERID={user.uid}
    - WORK_DIR=/workdir
    - BUILD_DIR=build-torizon
    - DISTRIBUTION=torizon
    - BRANCH=zeus
    - MACHINE=verdin-imx8mm
    - MANIFEST_REPO=https://github.com/ci4rail/toradex-torizon-manifest

job=prepare-generate-manifest-version:
  use: image-buildingblock-gitversion
  mounts:
    - torizon-build-dir
    - torizon-manifest-version
  env:
    - USERID={user.uid}
    - GIT_PATH=/workdir/repo-manifest

alias=prepare-build-torizon-core-docker:
  tasks:
    - prepare-sync-repos
    - prepare-generate-manifest-version
  annotations:
    description: "prepare build-torizon-core-docker (sync repos, accept EULA)"

# Build and install jobs
job=build-torizon-core-docker:
  use: image-torizon-builder
  command: bash -c "source /gen/env/gitversion.env && /usr/local/bin/build.sh"
  mounts:
    - torizon-build-dir
    - torizon-manifest-version
  env:
    - USERID={user.uid}
    - WORK_DIR=/workdir
    - BUILD_DIR=build-torizon
    - DISTRIBUTION=torizon
    - MACHINE=verdin-imx8mm
    - TARGET=torizon-core-docker
  sources:
    - build/torizon/torizon/layers/
  artifact:
    - build/torizon/torizon/build-torizon/deploy/images/verdin-imx8mm/

job=install-torizon-core-docker:
  use: image-torizon-builder
  command: bash -c "ARTIFACT=$(ls /workdir/torizon/build-torizon/deploy/images/verdin-imx8mm/*Tezi*.tar) && cp -r ${ARTIFACT} /install/ && tar xf $(basename ${ARTIFACT})"
  working-dir: /install
  depends:
    - build-torizon-core-docker
  mounts:
    - torizon-build-dir
    - torizon-install-dir
  env:
    - USERID={user.uid}
  sources:
    - build/torizon/torizon/build-torizon/deploy/images/verdin-imx8mm/*Tezi*.tar
  artifact:
    - install/torizon/*Tezi*.tar

# Interactive debug shell job
job=bash-torizon-core-docker:
  use: image-torizon-builder
  command: bash -c 'cd ${WORK_DIR}/${DISTRIBUTION} && . ./setup-environment; bash'
  mounts:
    - torizon-build-dir
    - torizon-install-dir
    - torizon-manifest-version
  interactive: true
  env:
    - USERID={user.uid}
    - WORK_DIR=/workdir
    - BUILD_DIR=build-torizon
    - DISTRIBUTION=torizon
    - MACHINE=verdin-imx8mm
    - TARGET=torizon-core-docker
    - DISTRIBUTION=torizon
    - BRANCH=zeus
    - MACHINE=verdin-imx8mm
    - MANIFEST_REPO=https://github.com/ci4rail/toradex-torizon-manifest
  annotations:
    description: "interactive shell for building torizon-core-docker"
